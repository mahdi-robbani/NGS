"0","#load files"
"0","snps <- read.table(""data/sub_geno.tab"")"
"0","gene_expr <- read.table(""data/sub_expr.tab"")"
"0","design <- read.table(""data/design.tab"", header = T, sep = ""\t"")"
"0","missing_count <- apply((snps == -1), 1, sum)"
"0","get_geno_frequency <- function(geno, snp_mat){"
"0","  boolean_matrix <- snp_mat == geno"
"0","  count <- apply(boolean_matrix, 1, sum)"
"0","  freq <- count/dim(snps)[2]"
"0","  return (freq)"
"0","}"
"0","get_maf <- function(snp_mat){"
"0","  genotypes <- c(0,1,2)"
"0","  #get matrix of genotype frequencies"
"0","  geno_freq <- sapply(genotypes, get_geno_frequency, snp_mat)"
"0","  colnames(geno_freq) <- genotypes"
"0","  allele_freq <- geno_freq + geno_freq[,2]/2"
"0","  allele_freq <- allele_freq[,-2]"
"0","  maf <- apply(allele_freq, 1, min)"
"0","  return (maf)"
"0","}"
"0","maf <- get_maf(snps)"
"0","keep <- maf >= 0.05 & missing_count == 0"
"0","snps_filtered <- snps[keep,]"
"0","filter_snp_population <- function(pop, snp_mat, design_mat, inv=F){"
"0","  if(inv){"
"0","    cols <- design_mat$Source.Name[design_mat$Characteristics.population. != pop]"
"0","  } else{"
"0","    cols <- design_mat$Source.Name[design_mat$Characteristics.population. == pop]"
"0","  }"
"0","  snp_mat <- (snp_mat[, cols])"
"0","  return(snp_mat)"
"0","}"
"0","african_snps <- filter_snp_population(""YRI"", snps_filtered, design)"
"0","non_african_snps <- filter_snp_population(""YRI"", snps_filtered, design, inv = T)"
"0","african_maf <- get_maf(african_snps)"
"0","non_african_maf <- get_maf(non_african_snps)"
