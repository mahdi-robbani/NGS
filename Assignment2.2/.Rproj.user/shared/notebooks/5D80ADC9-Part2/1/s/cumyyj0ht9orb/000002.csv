"0","#Matrix eQTL"
"0","library(MatrixEQTL)"
"0",""
"0","# Genotype file names"
"0","SNP_file_name = ""data/geno_ceu_chr20_strict.tab"" ; #Genotype file path"
"0","snps_location_file_name = ""data/geno_ceu_chr20_strict.pos"" ; #snp position file path"
"0",""
"0","# Gene expression file names"
"0","expression_file_name = ""data/expr_ceu_chr20.tab"" ;#Expression file path"
"0","gene_location_file_name = ""data/expr_chr20.pos"" ;#gene position file path"
"0",""
"0","# Only associations significant at this level will be saved"
"0","pvOutputThreshold_cis = 1; #p.value threshold for cis eqtls"
"0","pvOutputThreshold_tra = 0; #p.value threshold for trans eqtls"
"0",""
"0","#Covariates file names"
"0","covariates_file_name = character();# Set to character() for no covariates"
"0",""
"0","# Distance for local gene-SNP pairs"
"0","cisDist = 1e6; #Define cis distance"
"0",""
"0","## Load genotype data"
"0","snps = SlicedData$new();"
"0","snps$fileDelimiter = ""\t""; # the TAB character"
"0","snps$fileOmitCharacters = ""NA""; # denote missing values;"
"0","snps$fileSkipRows = 1; # one row of column labels"
"0","snps$fileSkipColumns = 1; # one column of row labels"
"0","snps$fileSliceSize = 2000; # read file in slices of 2,000 rows"
"0","snps$LoadFile(SNP_file_name);"
"2","Rows read: 2,000
"
"2","Rows read: 4,000
"
"2","Rows read: 6,000
"
"2","Rows read: 8,000
"
"2","Rows read: 10,000
"
"2","Rows read: 12,000
"
"2","Rows read: 14,000
"
"2","Rows read: 16,000
"
"2","Rows read: 18,000
"
"2","Rows read: 20,000
"
"2","Rows read: 22,000
"
"2","Rows read: 24,000
"
"2","Rows read: 26,000
"
"2","Rows read: 28,000
"
"2","Rows read: 30,000
"
"2","Rows read: 30000 done.
"
"0","## Load gene expression data"
"0","gene = SlicedData$new();"
"0","gene$fileDelimiter = ""\t""; # the TAB character"
"0","gene$fileOmitCharacters = ""NA""; # denote missing values;"
"0","gene$fileSkipRows = 1; # one row of column labels"
"0","gene$fileSkipColumns = 1; # one column of row labels"
"0","gene$fileSliceSize = 2000; # read file in slices of 2,000 rows"
"0","gene$LoadFile(expression_file_name);"
"2","Rows read: 561 done.
"
"0","#Load position files"
"0","snpspos = read.table(snps_location_file_name, header = TRUE, stringsAsFactors = FALSE);"
"0","genepos = read.table(gene_location_file_name, header = TRUE, stringsAsFactors = FALSE);"
"0",""
"0","## Run the analysis"
"0","me = Matrix_eQTL_main("
"0","  snps = snps,"
"0","  gene = gene,"
"0","  output_file_name=NULL,"
"0","  pvOutputThreshold = pvOutputThreshold_tra,"
"0","  useModel = modelLINEAR,"
"0","  errorCovariance =numeric(),"
"0","  verbose = TRUE,"
"0","  output_file_name.cis = NULL, #Do not write out cis results"
"0","  pvOutputThreshold.cis = pvOutputThreshold_cis,"
"0","  snpspos = snpspos,"
"0","  genepos = genepos,"
"0","  cisDist = cisDist,"
"0","  min.pv.by.genesnp = FALSE,"
"0","  noFDRsaveMemory = FALSE,"
"0","  pvalue.hist = FALSE)"
"2","Matching data files and location files
"
"2","561 of 561 genes matched
"
"2","30000 of 30000 SNPs matched

"
"2","Task finished in 0.06 seconds
"
"2","Reordering SNPs
"
"2","Task finished in 0.53 seconds
"
"2","Reordering genes
"
"2","Task finished in 0.36 seconds
"
"2","Processing covariates
"
"2","Task finished in 0.03 seconds
"
"2","Processing gene expression data (imputation, residualization)
"
"2","Task finished in 0.05 seconds
"
"2","Creating output file(s)
"
"2","Task finished in 0.04 seconds
"
"2","Performing eQTL analysis
"
"2"," 6.66% done, 56,158 cis-eQTLs
"
"2","13.33% done, 101,338 cis-eQTLs
"
"2","20.00% done, 113,643 cis-eQTLs
"
"2","26.66% done, 127,676 cis-eQTLs
"
"2","33.33% done, 136,430 cis-eQTLs
"
"2","40.00% done, 166,641 cis-eQTLs
"
"2","46.66% done, 187,389 cis-eQTLs
"
"2","53.33% done, 245,058 cis-eQTLs
"
"2","60.00% done, 286,249 cis-eQTLs
"
"2","66.66% done, 331,024 cis-eQTLs
"
"2","73.33% done, 377,660 cis-eQTLs
"
"2","80.00% done, 409,288 cis-eQTLs
"
"2","86.66% done, 425,208 cis-eQTLs
"
"2","93.33% done, 456,812 cis-eQTLs
"
"2","100.00% done, 527,117 cis-eQTLs
"
"2","Task finished in 3.82 seconds
"
"2","
"
"0","cis_eqtls = me$cis$eqtls[,-c(5)]"
"0","cis_eqtls[""beta_se""] = cis_eqtls[""beta""]/cis_eqtls[""statistic""]"
"0","rm(me)"
