dna <- read.table("native_DNA.fa")
head(dna)
library(Biostrings)
dna <- readDNAStringSet("native_DNA.fa")
head(dna)
dna$seq
protein <- translate(dna)
protein
length(protein$seq)
sample(protein$seq)
sample(length(protein$seq))
sample(length(protein$seq), 1)
sample(C("A", "C", "G", "T"), 1)
sample(c("A", "C", "G", "T"), 1)
dna$seq
dna$seq[1] <- "A"
dna$seq
dna <- readDNAStringSet("native_DNA.fa")
mutate <- function(dna){
pos <- sample(length(dna), 1)
base <- sample(c("A", "C", "G", "T"), 1)
dna[pos] <- base
return (dna)
}
q <- "AAAA"
mutate(q)
q <- "AAAA"
mutate(q)
mutate <- function(dna){
pos <- sample(length(dna), 1)
base <- sample(c("A", "C", "G", "T"), 1)
dna[pos] <- base
return (dna[pos] )
}
mutate(q)
mutate <- function(dna){
pos <- sample(length(dna), 1)
base <- sample(c("A", "C", "G", "T"), 1)
dna[pos] <- base
return (dna)
}
q <- "AAAA"
mutate(q)
mutate <- function(dna){
# pos <- sample(length(dna), 1)
# base <- sample(c("A", "C", "G", "T"), 1)
# dna[pos] <- base
return (dna)
}
q <- "AAAA"
mutate(q)
Q[1] <- "x"
q[1] <- "x"
q
mutate(dna$seq)
mutate <- function(dna){
pos <- sample(length(dna), 1)
pos <- 1
base <- sample(c("A", "C", "G", "T"), 1)
# dna[pos] <- base
return (dna)
}
mutate(dna$seq)
mutate <- function(dna){
pos <- sample(length(dna), 1)
pos <- 1
base <- sample(c("A", "C", "G", "T"), 1)
# dna[pos] <- base
return (dna)
}
mutate(dna$seq)
mutate <- function(dna){
pos <- sample(length(dna), 1)
pos <- 1
base <- sample(c("A", "C", "G", "T"), 1)
dna[pos] <- base
return (dna)
}
mutate(dna$seq)
replicate(100, mutate())
replicate(100, mutate(dna))
replicate(100, mutate(), dna$seq)
replicate(100, mutate(dna$seq))
mutate <- function(dna){
pos <- sample(length(dna), 1)
base <- sample(c("A", "C", "G", "T"), 1)
dna[pos] <- base
return (dna)
}
replicate(100, mutate(dna$seq))
q <- c(rep("A"), 4)
replicate(100, mutate(q))
test <- readDNAStringSet("test")
test <- readDNAStringSet("test.fa")
test
test$seq
mutate(test$seq)
mutate(test$seq)
replicate(100, mutate(test$seq))
seq <- dna$seq
print(seq)
for (i in 1:length(dna$seq)){
seq <- mutate(seq)
}
print(seq)
mutated_protein <- translate(seq)
mutated_protein
protein
protein$seq
n_mutates <- function(dna, n){
for(i in 1:n){
dna <- mutate(dna)
}
}
mutated_dna <- n_mutates(dna$seq, 100)
dna <- readDNAStringSet("native_DNA.fa")
n_mutates(dna$seq, 100)
mutated_dna <- n_mutates(dna$seq, 100)
seq <- dna$seq
print(seq)
for (i in 1:100){
seq <- mutate(seq)
}
print(seq)
n_mutates <- function(dna, n){
for(i in 1:n){
dna <- mutate(dna)
}
return(dna)
}
mutated_dna <- n_mutates(dna$seq, 100)
mutated_protein <- translate(mutated_dna)
mutated_protein
hist(mutated_dna)
letterFrequency(dna)
letterFrequency(dna)
?letterFrequency
alphabetFrequency(mutated_dna)
alphabetFrequency(mutated_dna)[1:4]
dna_freq <- alphabetFrequency(mutated_dna)[1:4]
plot(dna_freq)
library(tidyverse)
df <- data.frame(Freq=dna_freq)
df
df <- data.frame(Freq=dna_freq) %>% rownames_to_column("Base")
df
df %>%
ggplot(x=Base, y=Freq) + geom_histogram(stat="identity")
df %>%
ggplot(x=Base, y=Freq) + geom_bar()
df %>%
ggplot(aes(x=Base, y=Freq)) + geom_bar()
df %>%
ggplot(aes(x=Base, y=Freq)) + geom_histogram(stat="identity")
