library(tidyverse)
library(ggplot2)
library(dplyr)

#functions
subset_module <- function(tissue, module_df){
  tissue <- sub(" \\((...)\\)", "", tissue) #remove paratheses
  tissue_col_index <- grep(tissue, colnames(tissue_modules))
  module_df <- module_df[,tissue_col_index]
  return(module_df)
}

get_gene_count_df <- function(){
  gene_count <- c()
  t_name <- c()
  for(tissue in TISSUES){
    df <- subset_module(tissue, tissue_modules)
    counts <- unname(apply(df, 2, sum))
    gene_count <- c(gene_count, counts)
    t_name <- c(t_name, rep(tissue, length(counts)))
  }
  df <- tibble("Tissue" = t_name, "Gene Count" = gene_count)
  return(df)
}

get_overlap_df <- function(){
  gene_count <- c()
  t_name <- c()
  for(tissue in TISSUES){
    df <- subset_module(tissue, tissue_modules)
    counts <- unname(apply(df, 1, sum))
    gene_count <- c(gene_count, counts)
    t_name <- c(t_name, rep(tissue, length(counts)))
  }
  df <- tibble("Tissue" = t_name, "Overlap Count" = gene_count) %>% filter(`Overlap Count` > 0)
  return(df)
}

#load data
tissue_modules <- read_delim("results/modules_updated.txt", "\t")
TISSUES <- c("Brain - Frontal Cortex (BA9)", "Kidney - Cortex", "Muscle - Skeletal")
DATA <- read_csv("/data/projects/data/GTEx/gtex_data_subset.csv")


#module number plot
#module number plot
size <- c()
for (t in TISSUES){
  tmp <- subset_data(t, DATA, SAMPLE_ATTR)
  size <- c(size, dim(tmp)[2])
}
module_size <- c()
for (t in TISSUES){
  tmp <- subset_module(t, tissue_modules)
  module_size <- c(module_size, dim(tmp)[2])
}
size_df <- tibble("Tissue" = c("Brain", "Kidney", "Muscle"), "Sample" = size, 
                  "Module" = module_size)
size_df %>%
  gather(key = "Group", value = "Count", -Tissue) -> size_df
#save(size_df, file = "size_df.Rdata")

f_name <- paste0("plots/", "size", "_plot.png")
png(filename = f_name, width = 1800, height = 1300, res = 300)
ggplot(size_df, aes(x=Tissue, y=Count, fill=Group)) + 
  geom_bar(stat="identity", position="dodge", col="black")
dev.off()


#gene count plot (violin)
gene_count_df <- get_gene_count_df()

f_name <- paste0("plots/", "genecount", "_plot.png")
png(filename = f_name, width = 1800, height = 1300, res = 300)
ggplot(gene_count_df, aes(x=Tissue, y=`Gene Count`)) + 
  geom_violin(fill="steelblue") +
  geom_boxplot(width=0.1)
dev.off()




#overlap plot (histogram)
overlap_df <- get_overlap_df()
colnames(overlap_df) <- c("Tissue", "Overlap")


break_fun <- function(x){
  hi <- max(x)
  lo <- min(x)
  return(seq(lo, hi+1, 1))
}

f_name <- paste0("plots/", "overlap", "_plot.png")
png(filename = f_name, width = 1800, height = 1300, res = 300)
ggplot(overlap_df, aes(x=Overlap)) + 
  geom_histogram(aes(y=..density..), fill="steelblue1",
                 position = "identity", color="black", binwidth = 1) +
  #geom_density(alpha=0.6) +
  facet_wrap(vars(Tissue), scales = "free_x", dir="h") #+
  #scale_x_continuous(breaks = break_fun)
dev.off()












brain <- subset_data("Brain - Frontal Cortex (BA9)")[tissue_modules$`Brain - Frontal Cortex (BA9) M1`,]
dim(brain)
cor(t(brain))
tail(brain)
library(pheatmap)
pheatmap(brain, show_rownames = F, show_colnames = F, cluster_rows = F, cluster_cols = F)
pheatmap(cov(t(brain)), show_rownames = F, show_colnames = F, cluster_rows = F, cluster_cols = F)

cov(t(brain))

?fastICA




get_overlap <- function(){
  overlap_vector <- c()
  no_overlap_vector <- c()
  for(tissue in TISSUES){
    tissue <- sub(" \\((...)\\)", "", tissue) #remove paratheses
    tissue_col_index <- grep(tissue, colnames(tissue_modules))
    tissue_cols <- tissue_modules[,tissue_col_index]
    #get sum of genes per row (gives number of overlaps)
    overlap <- apply(tissue_cols, 1, sum)
    #caclulate
    len <- sum(overlap != 0)
    no_overlap_per <- sum(overlap == 1)/len *100
    overlap_per <- sum(overlap > 1)/len*100
    #add to vector
    no_overlap_vector <- c(no_overlap_vector, no_overlap_per)
    overlap_vector <- c(overlap_vector, overlap_per)
  }
  
  df <- tibble("Tissue" = TISSUES, "No Overlap" = no_overlap_vector,
               "Overlap" = overlap_vector)
  df <- df %>%
    gather(key = "Overlap", value = "Percentage", -Tissue)
  return(df)
}

# overlap_df <- get_overlap()
# overlap_df %>%
#   ggplot(aes(x=Tissue, y=Percentage, fill=Overlap)) + geom_bar(stat = "identity") +
#   ylab("Percentage of Overlapping Genes")








# overlap_df %>%
#   group_by(Tissue, Overlap) %>%
#   summarize(Count = n()) %>%
#   ggplot(aes(x=Overlap, y=Count)) + geom_bar(stat = "identity") +
#   facet_wrap(vars(Tissue), scales = "free", dir="v")

#############################
hist(overlap_df$Overlap)

overlap_df %>%
  filter(`Overlap Count` > 0)
overlap_df %>%
  ggplot(aes(x=Tissue, y=`Overlap Count`)) + geom_violin()







