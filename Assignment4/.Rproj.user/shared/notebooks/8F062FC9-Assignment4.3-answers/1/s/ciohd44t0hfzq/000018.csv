"0","# Section 4: Identification of caste differentially expressed genes"
"0","normal_ant = which(sampleTable$species %in% c(""Aech"",'Mpha',""Lhum"",'Sinv',""Lnig""))"
"0","ortholog_exp.ant = ortholog_counts[,normal_ant]"
"0","ortholog_counts.ant = ortholog_counts[,normal_ant]"
"0","ortholog_counts.ant = ortholog_counts.ant[!apply(ortholog_counts.ant, 1, anyNA),]"
"0","ortholog_counts.ant.norm = matrix(as.integer(ortholog_counts.ant), ncol = dim(ortholog_counts.ant)[2],"
"0","                                  dimnames = list(rownames(ortholog_counts.ant),colnames(ortholog_counts.ant)))"
"0","get_dif_exp_genes <- function(target_species, model=1){"
"0","  if(model == 1){"
"0","    dds <- DESeqDataSetFromMatrix("
"0","      ortholog_counts.ant.norm[,which(sampleTable.ant$species %in% target_species)], sampleTable.ant[which(sampleTable.ant$species %in% target_species),],"
"0","      design = ~caste)"
"0","  } else{"
"0","    dds <- DESeqDataSetFromMatrix("
"0","      ortholog_counts.ant.norm[,which(sampleTable.ant$species %in% target_species)], sampleTable.ant[which(sampleTable.ant$species %in% target_species),],"
"0","      design = ~caste +species+caste:species)"
"0","  }"
"0","  dds = DESeq(dds)"
"0","  res.aech = results(dds, contrast = c(""caste"",c(""Gyne"",'Worker')),alpha = 0.05)"
"0","  return(res.aech)"
"0","}"
"0","ants_names <- c(""Mpha"", ""Aech"", ""Lhum"", ""Lnig"", ""Sinv"")"
"0","dseq_results <- list()"
"0","filtered_genes <- list()"
"0","for(name in ants_names){"
"0","  dseq_results[[name]] <- get_dif_exp_genes(name)"
"0","    filtered_genes[[name]] <- dseq_results[[name]] %>% "
"0","      as.data.frame %>% "
"0","      rownames_to_column(""Gene"") %>% "
"0","      filter(padj < 0.05) %>% "
"0","      select(Gene)"
"0","}"
"0","combinations <- list()"
"0","gene_count <- list()"
"0","for(i in 1:5){"
"0","  combinations[[i]] <- combn(ants_names, i) # list of species names combinations"
"0","  columns <- dim(combinations[[i]])[2]"
"0","  for(c in 1:columns){"
"0","    species <- combinations[[i]][,c] #vector of species names"
"0","    group <- paste0(species, collapse = ""-"")"
"0","    gene_list <- list() #list of vectors of gene names"
"0","    for(s in species){"
"0","      gene_list[[s]] <- filtered_genes[[s]]$Gene"
"0","    }"
"0","    gene_count[[group]] <- length(Reduce(intersect, gene_list))"
"0","  }"
"0","}"
"0","model_1 <- gene_count %>% as.data.frame() %>% t %>% as.data.frame()"
"0","model_1$V2 <- as.factor(str_count(rownames(model_1), ""[.]"") + 1)"
"0","model_1 %>%"
"0","  ggplot(aes(x=V2, y=V1)) + geom_boxplot()"
